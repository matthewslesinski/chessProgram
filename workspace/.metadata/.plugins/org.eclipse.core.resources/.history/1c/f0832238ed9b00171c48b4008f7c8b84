package gamePlaying;

import representation.Board;

public enum GameState {

	STILL_GOING("*", 0),
	STALEMATE("1/2-1/2", 0),
	WHITE_WINS("1-0", Double.POSITIVE_INFINITY),
	BLACK_WINS("0-1", Double.NEGATIVE_INFINITY),
	;
	
	private final String pgnRepresentation;
	private final double evaluation;
	
	private GameState(String pgnRepresentation, double evaluation) {
		this.pgnRepresentation = pgnRepresentation;
		this.evaluation = evaluation;
	}
	
	
	public double getEvaluation() {
		return evaluation;
	}
	
	@Override
	public String toString() {
		return pgnRepresentation;
	}
	
	public static GameState getByBoard(Board board) {
		if (board.isOver()) {
			if (board.isInCheck()) {
				return board.whoseMove().isWhite() ? BLACK_WINS : WHITE_WINS;
			} else {
				return STALEMATE;
			}
		} else {
			return STILL_GOING;
		}
	}
}
