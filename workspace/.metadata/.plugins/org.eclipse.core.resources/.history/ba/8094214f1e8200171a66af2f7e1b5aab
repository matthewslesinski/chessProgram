package gamePlaying;

import java.util.Arrays;
import java.util.Collection;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.stream.Collectors;

public class UserInput {

	private static final String DEFAULT_INPUT = "";
	private final Collection<InputType> types;
	private final Collection<Function<Game, String>> actions;
	
	public UserInput(String input) {
		this.types = new LinkedList<>();
		InputType type = InputType.getInputType(input);
		this.types.add(type);
		this.actions = new LinkedList<>();
		this.actions.add(type.getAction(input));
	}
	
	public UserInput(InputType... types) {
		this.types = new LinkedList<>();
		this.types.addAll(Arrays.asList(types));
		this.actions = new LinkedList<>();
		this.actions.addAll(Arrays.asList(types).stream().map(type -> type.getAction(DEFAULT_INPUT)).collect(Collectors.toList()));
	}
	
	public Collection<String> performAction(Game game) {
		return actions.stream().map(action -> {
			return action.apply(game);
		}).collect(Collectors.toList());
		}
	}
	
	public Collection<String> performAction() {
		return performAction(Game.getCurrentGame());
	}
	
	public UserInput chain(UserInput followUp) {
		this.types.addAll(followUp.types);
		this.actions.addAll(followUp.actions);
		return this;
	}
	
	
}
