package independentDataStructures;

import java.util.Collection;
import java.util.Map;
import java.util.Set;
import java.util.function.Supplier;

public class NestedMaps<T, U, V> implements Map<T, Map<U, V>> {

	private final Map<T, Map<U, V>> outerMap;
	private int size = 0;
	
	public NestedMaps(Supplier<Map<T, Map<U, V>>> outerMapConstructor, Supplier<Map<U, V>> innerMapConstructor) {
		outerMap = outerMapConstructor.get();
	}

	@Override
	public int size() {
		return size;
	}

	@Override
	public boolean isEmpty() {
		return size == 0;
	}

	@Override
	public boolean containsKey(Object key) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean containsValue(Object value) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Map<U, V> get(Object key) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Map<U, V> put(T key, Map<U, V> value) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Map<U, V> remove(Object key) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void putAll(Map<? extends T, ? extends Map<U, V>> m) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Set<T> keySet() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Collection<Map<U, V>> values() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<java.util.Map.Entry<T, Map<U, V>>> entrySet() {
		// TODO Auto-generated method stub
		return null;
	}
}
