package support;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

import representation.Board;
import stringUtilities.MoveWriter;

public class BadBoardException extends BadArgumentException {

	private static final long serialVersionUID = -1306867972968320193L;

	public BadBoardException(Board problemBoard, String message) {
		super(problemBoard, Board.class, message);
		// TODO Auto-generated constructor stub
	}
	
	public void printBoardTrace() {
		printStackTrace();
		Board problemBoard = (Board) getArgument();
		List<Board> trace = new LinkedList<>();
		do {
			trace.add(problemBoard);
		} while ((problemBoard = problemBoard.getPreviousPosition()) != null);
		Collections.reverse(trace);
		trace.forEach(board -> {
			if (board.lastMove() != null) {
				System.out.println("Last move: " + MoveWriter.getMoveAsStringInContext(board.lastMove(), board.getPreviousPosition()));
				System.out.println(("Out of: " + board.getPreviousPosition().getLegalMoves());
			}
			System.out.println(board.basicToString());
		});
	}

}
