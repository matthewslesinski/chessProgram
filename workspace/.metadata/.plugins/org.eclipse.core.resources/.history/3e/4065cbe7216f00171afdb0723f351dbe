package boardFeatures;

import java.util.function.Function;

public enum LineType {

	FILE(File.class),
	RANK(Rank.class),
	UP_RIGHT_DIAGONAL(UpRightDiagonal.class),
	DOWN_RIGHT_DIAGONAL(DownRightDiagonal.class);
	
	static {
		for (LineType type : values()) {
			type.determineCharacteristics();
		}
	}
	
	private final Class<? extends Enum<? extends Line>> type;
	private final Enum<? extends Line>[] valuesArray;
	private Function<Square, ? extends Enum<? extends Line>> getLineBySquare;
	private Direction forwardDirection;
	
	private LineType(Class<? extends Enum<? extends Line>> type) {
		this.type = type;
		this.valuesArray = type.getEnumConstants();
	}
	
	
	public Class<? extends Enum<? extends Line>> getType() {
		return type;
	}
	
	public Enum<? extends Line>[] getEnumValues() {
		return valuesArray;
	}
	
	public Enum<? extends Line> getLineBySquare(Square square) {
		return getLineBySquare.apply(square);
	}
	
	public Direction getForwardDirection() {
		return forwardDirection;
	}
	
	
	
	
	private void determineCharacteristics() {
		if (this == FILE) {
			this.getLineBySquare = (square) -> square.getFile();
			this.forwardDirection = Direction.UP;
		} else if (this == RANK) {
			this.getLineBySquare = (square) -> square.getRank();
			this.forwardDirection = Direction.RIGHT;
		} else if (this == UP_RIGHT_DIAGONAL) {
			this.getLineBySquare = (square) -> square.getUpRightDiagonal();
			this.forwardDirection = Direction.UP_RIGHT;
		} else if (this == DOWN_RIGHT_DIAGONAL) {
			this.getLineBySquare = (square) -> square.getDownRightDiagonal();
			this.forwardDirection = Direction.DOWN_RIGHT;
		} else {
			// wtf
		}
		
	}
}
