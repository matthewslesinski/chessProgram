package moves;

import boardFeatures.Square;
import gamePlaying.Color;

public enum MoveType {

	NORMAL,
	CAPTURE,
	CASTLE,
	PROMOTION,
	PROMOTION_WITH_CAPTURE,
	EN_PASSANT;
	
	public static MoveType infer(Square end, ProcessedBoard<?> board) {
		return board.isEmptySquare(end) ? NORMAL : CAPTURE;
	}

	public static MoveType inferForPawns(Square start, Square end, ProcessedBoard<?> board) {
		Color toMove = board.whoseMove();
		if (end.getRank() == toMove.getQueeningRank()) {
			return board.isEmptySquare(end) ? PROMOTION : PROMOTION_WITH_CAPTURE;
		}
		if (end.getRank() == start.getRank()) {
			return EN_PASSANT;
		}
		return infer(end, board);
	}
	
	public static MoveType inferForKings(Square start, Square end, ProcessedBoard<?> board) {
		if (Math.abs(start.getFile().getIndex() - end.getFile().getIndex()) > 1) {
			return CASTLE;
		}
		return infer(end, board);
	}
	
	
}
