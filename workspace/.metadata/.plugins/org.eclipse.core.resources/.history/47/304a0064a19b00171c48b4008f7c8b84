package gamePlaying;

import java.util.Collection;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.function.Function;

import representation.Board;
import representation.BoardBuilder;
import stringUtilities.OptionalPGNTag;
import stringUtilities.PGNTag;
import stringUtilities.PGNWriter;
import stringUtilities.RequiredPGNTag;
import support.Constants;
import support.Constructors;

/**
 * Comprises a complete game
 * @author matthewslesinski
 *
 */
public class LinearGame extends Game {
	
	/** The list of positions that have occurred in this game. The last one is the current position */
	private final List<Board> positions = new LinkedList<>();
	
	@Override
	public Board getCurrentPosition() {
		return positions.get(positions.size() - 1);
	}
	
	@Override
	public Board getLastPosition() {
		return positions.get(positions.size() - 1);
	}
	@Override
	public void undoPlies(int plies) {
		while (plies-- > 0) {
			positions.remove(positions.size() - 1);
		}
	}
	
	@Override
	public int getPlyNumber() {
		return positions.size();
	}
	
	@Override
	public void addPosition(Board board) {
		positions.add(board);
	}
}
