package gamePlaying;

import java.util.LinkedList;
import java.util.List;

import independentDataStructures.Tree;
import moves.Move;
import representation.Board;

/**
 * Comprises a complete game
 * @author matthewslesinski
 *
 */
public class GameTree extends Game {
	
	/** The list of positions that have occurred in this game. The last one is the current position */
	private Tree positions;
	
	@Override
	protected void initBoardStore(Board initialBoard) {
		positions = new Tree<Move, Board>(initialBoard);
	}
	
	@Override
	public Board getCurrentPosition() {
		// TODO
		return null;
	}
	
	@Override
	public Board getLastPosition() {
		// TODO
		return null;
	}
	@Override
	public void undoPlies(int plies) {
		while (plies-- > 0) {
			positions.remove(positions.size() - 1);
		}
	}
	
	@Override
	public int getPlyNumber() {
		return positions.size();
	}
	
	@Override
	public void addPosition(Board board) {
		positions.add(board);
	}
}
